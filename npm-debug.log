0 info it worked if it ends with ok
1 verbose cli [ '/Users/lilei/.nvm/versions/node/v4.2.1/bin/node',
1 verbose cli   '/Users/lilei/.nvm/versions/node/v4.2.1/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.14.7
3 info using node@v4.2.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/lilei/Documents/github/code-error',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/lilei/.npm/code-error/0.1.2/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/lilei/.npm/code-error/0.1.2/package.tgz',
9 verbose tar pack   '/Users/lilei/Documents/github/code-error' ]
10 verbose tarball /Users/lilei/.npm/code-error/0.1.2/package.tgz
11 verbose folder /Users/lilei/Documents/github/code-error
12 info prepublish code-error@0.1.2
13 verbose addLocalTarball adding from inside cache /Users/lilei/.npm/code-error/0.1.2/package.tgz
14 silly cache afterAdd code-error@0.1.2
15 verbose afterAdd /Users/lilei/.npm/code-error/0.1.2/package/package.json not in flight; writing
16 verbose afterAdd /Users/lilei/.npm/code-error/0.1.2/package/package.json written
17 silly publish { name: 'code-error',
17 silly publish   version: '0.1.2',
17 silly publish   description: 'define node error with code',
17 silly publish   main: './index.js',
17 silly publish   scripts: { test: 'NODE_ENV=mocha mocha' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/lee715/code-error.git' },
17 silly publish   keywords: [ 'error,code' ],
17 silly publish   license: 'ISC',
17 silly publish   bugs: { url: 'https://github.com/lee715/code-error/issues' },
17 silly publish   homepage: 'https://github.com/lee715/code-error',
17 silly publish   dependencies: {},
17 silly publish   devDependencies: { mocha: '~2.3.4' },
17 silly publish   gitHead: '95f6fbe26f617cb9a07fdd96bc34f6299187829b',
17 silly publish   readme: 'code-error\n===\ndefine errror with code\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n\n## Installation\n\n```bash\nnpm install code-error\n```\n\n## Demo\n```js\n// extend a new type of error\nvar CodeError = require(\'code-error\')\nCodeError.extend(\'api\', 400, 100)\nvar err = CodeError(\'api\', \'db is not defined\', 32)\nerr.status // 400\nerr.toString() // \'ApiError: db is not defined\'\nerr.toJSON()\n/*\n  {\n    code: 10032,\n    message: \'ApiError: db is not defined\',\n    type: \'ApiError\'\n  }\n*/\n\n// configure CodeError and describe code by keywords\nCodeError.configure({\n  maps: [{\n    user: 1,\n    book: 2,\n    cat: 3\n  }, {\n    missed: 1,\n    invalid: 2,\n    unmatched: 3\n  }],\n  splitLetter: \' \' // default is \' \',\n  useMsgForCode: true // default is false\n})\n// then you can create err like this\nerr = CodeError(\'api\', \'user invalid\')\nerr.status // 400\nerr.toString() // \'ApiError: user invalid\'\nerr.toJSON()\n/*\n  {\n    code: 10012,\n    message: \'ApiError: user invalid\',\n    type: \'ApiError\'\n  }\n*/\n\n## API\n\n### CodeError(name, msg, code, originalError)\n- factory function for getting an error constructor or creating an instance\n\n```js\nvar CodeError = require(\'code-error\')\nCodeError.extend(\'api\', 400, 100)\nCodeError(\'api\') // => function ApiError\nCodeError(\'api\', \'api error\', 32, new Error(\'xxx\')) // => instance of ApiError\n\n### CodeError.extend(name, status, baseCode, customCode)\n\n- `name` *Required*, `String`, define the type of the error\n- `status` `Number`, define the status of the error, default is 500\n- `baseCode` *Required*, `Number`, the first part of the code\n- `customCode` *Option*, `Number`, if passed, the last part of code will be always the customCode, this is used for errors with stationary code, like SystemError\n\n```js\nvar CodeError = require(\'code-error\')\nCodeError.extend(\'api\', 400, 100)\nCodeError(\'api\', \'api error\', 43) // code == 10043\nCodeError.extend(\'system\', 500, 101, 10)\nCodeError(\'system\', \'system error\', 43) // code == 10110\n\n### CodeError.configure(opts)\n- global config.only used for transfering message to code right now.\n- maps `Array` map of values for keywords.for common use, you can use maps[0] as map of model, use maps[1] as map of action.then, your error message will like \'user invalid\', \'password unmatch\', etc.\n\n```js\nvar CodeError = require(\'code-error\')\nCodeError.configure({\n  maps: [{\n    user: 1,\n    book: 2,\n    cat: 3\n  }, {\n    missed: 1,\n    invalid: 2,\n    unmatch: 3\n  }],\n  splitLetter: \' \' // default is \' \',\n  useMsgForCode: true // default is false\n})\nCodeError.extend(\'api\', 400, 100)\nvar err = CodeError(\'api\', \'use missed\')\nerr.code // => 10011\nvar err = CodeError(\'api\', \'book unmatch\')\nerr.code // => 10023\n\n### CodeError.wrap(err, name)\n- err *Required* `Error` the error to be wrapped\n- name *Option* `String` which type of error to wrap, default is \'system\'\n\n```js\nCodeError.extend(\'system\', 500, 100, 10)\nvar err = new Error("I\'m a nodejs Error")\nvar wrapped = CodeError.wrap(err, \'system\')\nwrapped.toString() // => "SystemError: I\'m a nodejs Error"\nwrapped.toJSON()\n/*\n  => {\n    code: 10010,\n    message: "SystemError: I\'m a nodejs Error",\n    type: "SystemError"\n  }\n*/',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   _id: 'code-error@0.1.2',
17 silly publish   _shasum: '9d17ebadc552ba7618e9746c8079a337d2352f43',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name code-error
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/code-error
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/lilei/.npm/code-error/0.1.2/package.tgz
25 verbose request uri https://registry.npmjs.org/code-error
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 5:31:56 PM
28 verbose request using bearer token for auth
29 verbose request id 085119ed06385452
30 http request PUT https://registry.npmjs.org/code-error
31 http 403 https://registry.npmjs.org/code-error
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=300',
32 verbose headers   'content-length': '102',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Wed, 30 Mar 2016 09:30:01 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-sin6927-SIN',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1459330201.023198,VS0,VE830' }
33 verbose request invalidating /Users/lilei/.npm/registry.npmjs.org/code-error on PUT
34 error publish Failed PUT 403
35 verbose stack Error: You do not have permission to publish 'code-error'. Are you logged in as the correct user? : code-error
35 verbose stack     at makeError (/Users/lilei/.nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/Users/lilei/.nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
35 verbose stack     at Request._callback (/Users/lilei/.nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
35 verbose stack     at Request.self.callback (/Users/lilei/.nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/Users/lilei/.nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/request/request.js:1063:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/Users/lilei/.nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/request/request.js:1009:12)
36 verbose statusCode 403
37 verbose pkgid code-error
38 verbose cwd /Users/lilei/Documents/github/code-error
39 error Darwin 14.5.0
40 error argv "/Users/lilei/.nvm/versions/node/v4.2.1/bin/node" "/Users/lilei/.nvm/versions/node/v4.2.1/bin/npm" "publish"
41 error node v4.2.1
42 error npm  v2.14.7
43 error code E403
44 error You do not have permission to publish 'code-error'. Are you logged in as the correct user? : code-error
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
